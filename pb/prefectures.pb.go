// Code generated by protoc-gen-go. DO NOT EDIT.
// source: prefectures.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Prefecture struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Romaji               string   `protobuf:"bytes,3,opt,name=romaji,proto3" json:"romaji,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prefecture) Reset()         { *m = Prefecture{} }
func (m *Prefecture) String() string { return proto.CompactTextString(m) }
func (*Prefecture) ProtoMessage()    {}
func (*Prefecture) Descriptor() ([]byte, []int) {
	return fileDescriptor_prefectures_e8abb3363ac5e1d8, []int{0}
}
func (m *Prefecture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefecture.Unmarshal(m, b)
}
func (m *Prefecture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefecture.Marshal(b, m, deterministic)
}
func (dst *Prefecture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefecture.Merge(dst, src)
}
func (m *Prefecture) XXX_Size() int {
	return xxx_messageInfo_Prefecture.Size(m)
}
func (m *Prefecture) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefecture.DiscardUnknown(m)
}

var xxx_messageInfo_Prefecture proto.InternalMessageInfo

func (m *Prefecture) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Prefecture) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Prefecture) GetRomaji() string {
	if m != nil {
		return m.Romaji
	}
	return ""
}

type Prefectures struct {
	Prefectures          []*Prefecture `protobuf:"bytes,1,rep,name=prefectures,proto3" json:"prefectures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Prefectures) Reset()         { *m = Prefectures{} }
func (m *Prefectures) String() string { return proto.CompactTextString(m) }
func (*Prefectures) ProtoMessage()    {}
func (*Prefectures) Descriptor() ([]byte, []int) {
	return fileDescriptor_prefectures_e8abb3363ac5e1d8, []int{1}
}
func (m *Prefectures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefectures.Unmarshal(m, b)
}
func (m *Prefectures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefectures.Marshal(b, m, deterministic)
}
func (dst *Prefectures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefectures.Merge(dst, src)
}
func (m *Prefectures) XXX_Size() int {
	return xxx_messageInfo_Prefectures.Size(m)
}
func (m *Prefectures) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefectures.DiscardUnknown(m)
}

var xxx_messageInfo_Prefectures proto.InternalMessageInfo

func (m *Prefectures) GetPrefectures() []*Prefecture {
	if m != nil {
		return m.Prefectures
	}
	return nil
}

func init() {
	proto.RegisterType((*Prefecture)(nil), "pb.Prefecture")
	proto.RegisterType((*Prefectures)(nil), "pb.Prefectures")
}

func init() { proto.RegisterFile("prefectures.proto", fileDescriptor_prefectures_e8abb3363ac5e1d8) }

var fileDescriptor_prefectures_e8abb3363ac5e1d8 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0x4a, 0x4d,
	0x4b, 0x4d, 0x2e, 0x29, 0x2d, 0x4a, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a,
	0x48, 0x52, 0xf2, 0xe0, 0xe2, 0x0a, 0x80, 0x4b, 0x08, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0x30, 0x07, 0x31, 0x65, 0xa6, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6,
	0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x62, 0x5c, 0x6c, 0x45, 0xf9, 0xb9,
	0x89, 0x59, 0x99, 0x12, 0xcc, 0x60, 0x51, 0x28, 0x4f, 0xc9, 0x9e, 0x8b, 0x1b, 0x61, 0x52, 0xb1,
	0x90, 0x01, 0x17, 0x37, 0x92, 0x8d, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x7c, 0x7a, 0x05,
	0x49, 0x7a, 0x08, 0x55, 0x41, 0xc8, 0x4a, 0x9c, 0x58, 0xa2, 0x98, 0x0a, 0x92, 0x92, 0xd8, 0xc0,
	0x6e, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x58, 0xbc, 0x14, 0x95, 0xb0, 0x00, 0x00, 0x00,
}
